"""add Tournament table

Revision ID: f2a6ee4e368a
Revises: 743442c594bd
Create Date: 2024-07-16 01:52:36.519695

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f2a6ee4e368a'
down_revision: Union[str, None] = '743442c594bd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('grid',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('grid_type', postgresql.ENUM('CIRCLE', 'PLAYOFF', 'COMBINED', name='grid_type_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_queue',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sport',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('sport_id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('enroll_start_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('enroll_end_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('grid', sa.UUID(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('admins_id', sa.ARRAY(sa.UUID()), nullable=False),
    sa.Column('players_id', sa.ARRAY(sa.UUID()), nullable=True),
    sa.Column('status', postgresql.ENUM('COMPLETED', 'CANCELED', 'PROGRESS', 'REGISTRATION_OPEN', 'REGISTRATION_CLOSE', 'SCHEDULED', name='tournament_status_enum'), nullable=False),
    sa.Column('team_players_limit', sa.Integer(), nullable=False),
    sa.Column('teams_limit', sa.Integer(), nullable=False),
    sa.Column('queue_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['grid'], ['grid.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['queue_id'], ['match_queue.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sport_id'], ['sport.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tournament')
    op.drop_table('sport')
    op.drop_table('match_queue')
    op.drop_table('grid')
    # ### end Alembic commands ###
